@model MatchScoreViewModel

@using Microsoft.Extensions.Caching.Memory
@using TennisScoreboard.Application.Common.Interfaces
@using TennisScoreboard.Infrastructure.Services

@inject IMemoryCache _cache
@inject IPlayerRepository _playerRep;

@{
    ViewData["Title"] = $"Матч {Context.Request.Query.FirstOrDefault(key => key.Key == "uuid").Value}";
}

@{
    await Scoreboard();
}

@{
    async Task Scoreboard()
    {
        var matchId = Context.Request.Query.FirstOrDefault(key => key.Key == "uuid").Value.ToString();
        _cache.TryGetValue(matchId, out MatchService match);

        var player1 = await _playerRep.GetById(match.IdPlayer1);
        var player2 = await _playerRep.GetById(match.IdPlayer2);

        void WinPlayer1()
            => Model.IdPointWinner = match.IdPlayer1;

        void WinPlayer2()
            => Model.IdPointWinner = match.IdPlayer2;

        <form asp-action="MatchScore" method="post" asp-route-uuid="@matchId">
            <li>
                @player1.Name: @match.ScorePlayer1
            </li>
            <br/>
            <li>
                @player2.Name: @match.ScorePlayer2
            </li>

            <div class="col-5 offset-2">
                <input 
                    type="submit"
                    value="Победа @player1.Name"
                    class="btn btn-success form-control" 
                    onclick="WinPlayer1()" />
            </div>

            <br />

            <div class="col 5" offset-2">
                <input 
                    type="submit"
                    value="Победа @player2.Name"
                    class="btn btn-success form-control" 
                    onclick="WinPlayer2()" />
            </div>

            <input type="text" name="Model.IdPointWinner" hidden/>
        </form>
    }
}
// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TennisScoreboard.Infrastructure.Persistence;

#nullable disable

namespace TennisScoreboard.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231120193756_InitializeDb")]
    partial class InitializeDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TennisScoreboard.Domain.Entities.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPlayer1")
                        .HasColumnType("int");

                    b.Property<int>("IdPlayer2")
                        .HasColumnType("int");

                    b.Property<int>("Winner")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPlayer1");

                    b.HasIndex("IdPlayer2");

                    b.HasIndex("Winner");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("TennisScoreboard.Domain.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "Player_Name");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("TennisScoreboard.Domain.Entities.Match", b =>
                {
                    b.HasOne("TennisScoreboard.Domain.Entities.Player", "Player1")
                        .WithMany()
                        .HasForeignKey("IdPlayer1")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TennisScoreboard.Domain.Entities.Player", "Player2")
                        .WithMany()
                        .HasForeignKey("IdPlayer2")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TennisScoreboard.Domain.Entities.Player", "PlayerWinner")
                        .WithMany()
                        .HasForeignKey("Winner")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Player1");

                    b.Navigation("Player2");

                    b.Navigation("PlayerWinner");
                });
#pragma warning restore 612, 618
        }
    }
}
